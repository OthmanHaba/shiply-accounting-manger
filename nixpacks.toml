[variables]
# PHP Configuration
PHP_VERSION = "8.4"
NIXPACKS_PHP_ROOT_DIR = "/var/www"
NIXPACKS_PHP_FALLBACK_PATH = "public/index.php"

# Node.js Configuration
NODE_VERSION = "20"

# Laravel specific
APP_ENV = "production"
APP_DEBUG = "false"
LOG_CHANNEL = "stderr"
LOG_STDERR_FORMATTER = "Monolog\\Formatter\\JsonFormatter"

[phases.setup]
nixPkgs = [
    "php84",
    "php84Extensions.bcmath",
    "php84Extensions.ctype",
    "php84Extensions.curl",
    "php84Extensions.dom",
    "php84Extensions.fileinfo",
    "php84Extensions.filter",
    "php84Extensions.hash",
    "php84Extensions.mbstring",
    "php84Extensions.openssl",
    "php84Extensions.pcre",
    "php84Extensions.pdo",
    "php84Extensions.pdo_mysql",
    "php84Extensions.pdo_pgsql",
    "php84Extensions.session",
    "php84Extensions.tokenizer",
    "php84Extensions.xml",
    "php84Extensions.zip",
    "php84Extensions.gd",
    "php84Extensions.intl",
    "php84Extensions.redis",
    "nodejs_20",
    "npm",
    "nginx"
]

[phases.install]
cmds = [
    "composer install --no-dev --optimize-autoloader --no-interaction",
    "npm ci --only=production"
]

[phases.build]
cmds = [
    "npm run build",
    "php artisan config:cache",
    "php artisan route:cache",
    "php artisan view:cache",
    "php artisan event:cache",
    "php artisan filament:optimize"
]

[phases.setup.onlyIncludeFiles]
paths = [
    "composer.json",
    "composer.lock",
    "package.json",
    "package-lock.json",
    "artisan",
    "public",
    "app",
    "bootstrap",
    "config",
    "database",
    "resources",
    "routes",
    "storage",
    "lang"
]

[start]
cmd = "php-fpm & nginx -g 'daemon off;'"

[staticAssets]
"public" = "/"
